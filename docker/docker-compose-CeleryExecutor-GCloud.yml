version: '3.3'
services:
    rabbitmq:
        image: rabbitmq:3.6.12-management-alpine
        environment:
            - RABBITMQ_ERLANG_COOKIE=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    postgres:
        image: postgres:9.6-alpine
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        #ports:
            #- "5432:5432"
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    webserver:
        image: wongwill86/air-tasks:latest
        restart: always
        depends_on:
            - postgres
            - rabbitmq
        environment:
            - LOAD_EX=y
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - AIRFLOW_HOME=/usr/local/airflow
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_DEFAULT_REGION
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
        volumes:
            # Warning mounting dags/plugins not working for autoscaler
            #- ../dags/:/usr/local/airflow/dags
            #- ../plugins:/usr/local/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        #ports:
            #- "8080:8080"
        command: webserver
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    flower:
        image: wongwill86/air-tasks:latest
        restart: always
        depends_on:
            - rabbitmq
        environment:
            - EXECUTOR=Celery
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
        #ports:
            #- "5555:5555"
        command: flower
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    scheduler:
        image: wongwill86/air-tasks:latest
        restart: always
        depends_on:
            - webserver
        volumes:
            # Warning mounting dags/plugins not working for autoscaler
            #- ../dags/:/usr/local/airflow/dags
            #- ../plugins:/usr/local/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - LOAD_EX=y
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - AIRFLOW_HOME=/usr/local/airflow
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_DEFAULT_REGION
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
        command: scheduler
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    visualizer:
        image: dockersamples/visualizer:stable
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        #ports:
            #- "8080:8080"
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    worker-worker:
        image: wongwill86/air-tasks:latest
        restart: always
        depends_on:
            - scheduler
        volumes:
            # Warning mounting dags/plugins not working for autoscaler
            #- ../dags/:/usr/local/airflow/dags
            #- ../plugins:/usr/local/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
            - /tmp:/tmp
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - AIRFLOW_HOME=/usr/local/airflow
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_DEFAULT_REGION
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
        command: worker -q worker
        deploy:
            mode: global
            placement:
                constraints: [ engine.labels.infrakit-role == worker ]

    worker-manager:
        image: wongwill86/air-tasks:latest
        restart: always
        depends_on:
            - scheduler
        volumes:
            # Warning mounting dags/plugins not working for autoscaler
            #- ../dags/:/usr/local/airflow/dags
            #- ../plugins:/usr/local/airflow/plugins
            - /var/run/docker.sock:/var/run/docker.sock
            - /tmp:/tmp
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - AIRFLOW_HOME=/usr/local/airflow
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_DEFAULT_REGION
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            - INFRAKIT_IMAGE
            - INFRAKIT_GROUPS_URL
        command: worker -q manager
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]

    proxy:
        image: nginx:1.13.5-alpine
        ports:
            - "443:80"
            - "4000:81"
            - "82:82"
            - "4001:83"
        depends_on:
            - webserver
            - flower
            - visualizer
            - rabbitmq
        deploy:
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]
        environment:
            BASIC_AUTH_USERNAME_FILE: /run/secrets/basic_auth_username
            BASIC_AUTH_PASSWORD_FILE: /run/secrets/basic_auth_password
        command: "sh -c 'apk update && apk add apache2-utils && \
                  BASIC_AUTH_USERNAME=$$(cat /$$BASIC_AUTH_USERNAME_FILE) && \
                  BASIC_AUTH_PASSWORD=$$(cat /$$BASIC_AUTH_PASSWORD_FILE) && \
                  [ -n \"$$BASIC_AUTH_PASSWORD\" ] \
                         && AUTH_BASIC_STRING=\\\"AirflowAuthorization\\\" \
                         && htpasswd -b -c /etc/nginx/.htpasswd $${BASIC_AUTH_USERNAME} $${BASIC_AUTH_PASSWORD}
                         || AUTH_BASIC_STRING=off && \
                  sed -i \
                  -e \"s/include \\/etc\\/nginx\\/conf\\.d\\/\\*\\.conf;//\" \
                  -e \"\\$$s/}/\
                      server {\\n\
                          listen 80;\\n\
                          auth_basic $${AUTH_BASIC_STRING};\\n\
                          auth_basic_user_file \\/etc\\/nginx\\/\\.htpasswd;\\n\
                          location \\/ {\\n\
                              proxy_pass http:\\/\\/webserver:8080;\\n\
                          }\\n\
                      }\\n\
                      server {\\n\
                          listen 81;\\n\
                          auth_basic $${AUTH_BASIC_STRING};\\n\
                          auth_basic_user_file \\/etc\\/nginx\\/\\.htpasswd;\\n\
                          location \\/ {\\n\
                              proxy_pass http:\\/\\/flower:5555;\\n\
                          }\\n\
                      }\\n\
                      server {\\n\
                          listen 82;\\n\
                          auth_basic $${AUTH_BASIC_STRING};\\n\
                          auth_basic_user_file \\/etc\\/nginx\\/\\.htpasswd;\\n\
                          location \\/ {\\n\
                              proxy_pass http:\\/\\/visualizer:8080;\\n\
                          }\\n\
                      }\\n\
                      server {\\n\
                          listen 83;\\n\
                          auth_basic $${AUTH_BASIC_STRING};\\n\
                          auth_basic_user_file \\/etc\\/nginx\\/\\.htpasswd;\\n\
                          location \\/ {\\n\
                              proxy_pass http:\\/\\/rabbitmq:15672;\\n\
                          }\\n\
                      }\\n\
                  }\\n/\" \
                  /etc/nginx/nginx.conf && nginx -g \"daemon off;\"'"
        secrets:
            - basic_auth_username
            - basic_auth_password

    add-secrets:
        image: wongwill86/air-tasks:latest
        depends_on:
            - scheduler
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - AIRFLOW_HOME=/usr/local/airflow
            - REDIS_HOST=rabbitmq
            - REDIS_PORT=5672
        entrypoint: python /secrets_to_airflow_variables.py
        deploy:
            restart_policy:
                condition: on-failure
            placement:
                constraints: [ engine.labels.infrakit-role == manager ]
        #secrets:
            #- basic_auth_username
            #- basic_auth_password

secrets:
    basic_auth_username:
        external: true
    basic_auth_password:
        external: true
